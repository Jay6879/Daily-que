class Solution {
    public boolean[] isArraySpecial(int[] nums, int[][] queries) {
        boolean[] ans = new boolean[queries.length];

        ArrayList<Integer> al = new ArrayList<>();

        for(int i=1;i<nums.length;i++){
            if(nums[i]%2==nums[i-1]%2){
                al.add(i);
            }
        }

        int i=0;

        for(int[] query:queries){
            int start = query[0];
            int end = query[1];

            if(binarySearch(start+1,end,al)){
                ans[i++] = true;
            }
            else{
                ans[i++] = false;
            }
        }

        return ans;
    }

    public boolean binarySearch(int start,int end,ArrayList<Integer> al){
        int left = 0;
        int right = al.size()-1;

        while(left<=right){
            int mid = left+(right-left)/2;

            int violatingIdx = al.get(mid);

            if(violatingIdx<start){
                left=mid+1;
            }
            else if(violatingIdx>end){
                right = mid-1;
            }
            else{
                return false;
            }
        }

        return true;
    }
}

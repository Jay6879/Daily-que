class Solution {
    public long continuousSubarrays(int[] nums) {
        long count = 0;

        int left = 0;
        int right = 0;

        TreeMap<Integer,Integer> map = new TreeMap<>();

        while(right<nums.length){
            map.put(nums[right],map.getOrDefault(nums[right],0)+1);
            
            while(map.lastEntry().getKey()-map.firstEntry().getKey()>2){
                map.put(nums[left],map.get(nums[left])-1);
                if(map.get(nums[left])==0){
                    map.remove(nums[left]);
                }
                left++;
            }
            count+=(right-left+1);
            right++;
        }

        return count;
    }
}

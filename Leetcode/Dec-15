 class State{
    int num;
    int den;
    double avg;
    State(int num,int den){
        this.num = num;
        this.den = den;
        this.avg = calculateGain();
    }

    private double calculateGain(){
        return (double) (num + 1) / (den + 1) - (double) num / den;
    }

    public void addStudent() {
        num++;
        den++;
        avg = calculateGain();
    }
 }

class Solution {

    
    public double maxAverageRatio(int[][] classes, int extraStudents) {
        
        PriorityQueue<State> pq = new PriorityQueue<>((a, b) -> Double.compare(b.avg, a.avg));

        for(int[] num:classes){
            pq.add(new State(num[0],num[1]));
        }


        while(extraStudents-->0){
            State st = pq.remove();
            st.addStudent();
            pq.add(st);
        }

        double ans = 0;

        while(!pq.isEmpty()){
            State st = pq.remove();
            ans+=(double)st.num/st.den;
        }

        return ans/classes.length;
    }
}

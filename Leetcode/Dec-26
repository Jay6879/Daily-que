class Solution {
    int[][] memo;
    int target;
    int[] nums;
    int sum;
    public int findTargetSumWays(int[] nums, int target) {
        sum = 0;

        this.nums = nums;
        this.target = target;

        for(int num:nums){
            sum+=num;
        }

        memo = new int[nums.length][sum*2+1];

        for(int i=0;i<nums.length;i++){
            Arrays.fill(memo[i],-1);
        }

        return dp(0,0);
    }

    public int dp(int i,int currSum){

        if (i == nums.length) {
            return (currSum == target) ? 1 : 0;
        }

        if(memo[i][currSum+sum]!=-1){
            return memo[i][currSum+sum];
        }

        int sub = dp(i+1,currSum-nums[i]);
        int add = dp(i+1,currSum+nums[i]);

        memo[i][currSum+sum] = sub+add;

        return memo[i][currSum+sum];
    }
}

class Solution {
    public boolean primeSubOperation(int[] nums) {
        int max = Integer.MIN_VALUE;

        for(int i=0;i<nums.length;i++){
            max = Math.max(max,nums[i]);
        }

        boolean[] sieve = new boolean[max+1];

        Arrays.fill(sieve,true);

        sieve[1] = false;

        for(int i=2;i<=Math.sqrt(max+1);i++){
            if(sieve[i]){
                for(int j=i*i;j<=max;j+=i){
                    sieve[j] = false;
                }
            }
        }

        int i=0;
        int curr = 1;

        while(i<nums.length){
            int difference = nums[i]-curr;

            if(difference<0){
                return false;
            }

            if(sieve[difference] == true|| difference==0){
                i++;
                curr++;
            }
            else{
                curr++;
            }
        }

        return true;
    }
}

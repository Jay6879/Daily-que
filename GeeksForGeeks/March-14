class Solution {
    int[][] memo;
    int[] coins;
    public int count(int coins[], int sum) {
        // code here.
        memo = new int[coins.length][sum+1];
        
        this.coins = coins;
        
        for(int i=0;i<coins.length;i++){
            Arrays.fill(memo[i],-1);
        }
        
        return dp(0,sum);
    }
    
    public int dp(int idx,int remainingSum){
        if (remainingSum == 0) {
            return 1; // Found a valid way to make the sum
        }

        if (idx >= coins.length || remainingSum < 0) {
            return 0; // No valid way
        }
        
        if(memo[idx][remainingSum]!=-1){
            return memo[idx][remainingSum];
        }
        
        int ways = dp(idx+1,remainingSum)+dp(idx,remainingSum-coins[idx]);
        
        memo[idx][remainingSum] = ways;
        
        return ways;
    }
}
